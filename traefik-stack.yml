version: &quot;3.3&quot;
services:
  traefik:
    image: traefik
    command: --web \
      --docker \
      --docker.swarmmode \
      --docker.domain=traefik.kb \
      --docker.watch \
      --logLevel=DEBUG
    networks:
      - traefik-net
    ports:
      - &quot;80:80&quot;
      - &quot;8080:8080&quot;
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /dev/null:/traefik.toml
    deploy:
      placement:
        constraints: [node.role==manager]
 
  portainer:
    image: portainer/portainer
    volumes:
      - &quot;/var/run/docker.sock:/var/run/docker.sock&quot;
      - &quot;portainerdata:/data&quot;
    networks:
      - traefik-net
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
        - &quot;traefik.enable=true&quot;
        - &quot;traefik.port=9000&quot;
        - &quot;traefik.docker.network=mystack_traefik-net&quot;
        - &quot;traefik.frontend.rule=Host:portainer.traefik.kb&quot;
 
  ms1:
    image: melvindave/spring-boot-example
    networks:
      - traefik-net
    depends_on:
      - mongodb
    deploy:
      replicas: 3
      labels:
        - &quot;traefik.enable=true&quot;
        - &quot;traefik.port=8080&quot;
        - &quot;traefik.docker.network=mystack_traefik-net&quot;
        - &quot;traefik.frontend.rule=Host:ms1.traefik.kb&quot;
 
  mongodb:
    image: mongo
    volumes:
      - &quot;mongodata:/data/db&quot;
    networks:
      - traefik-net
    deploy:
      replicas: 1
    ports:
      - &quot;27017:27017&quot;  
 
networks:
  traefik-net:
 
volumes:
   portainerdata:
   mongodata: